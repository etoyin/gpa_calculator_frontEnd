{"version":3,"sources":["Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","courses","name","units","scores","points","gp","console","log","this","setState","prevState","i","map","el","key","className","type","required","value","onChange","handleChange","bind","max","min","onClick","removeField","class","splice","e","preventDefault","result","reduce","prev","curr","Number","target","pointsCal","Math","round","onSubmit","handleSubmit","createUI","addField","href","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e57e301b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      courses: [\r\n        {\r\n          name: \"\",\r\n          units: 0,\r\n          scores: 0,\r\n          points: 0,\r\n        },\r\n        {\r\n          name: \"\",\r\n          units: 0,\r\n          scores: 0,\r\n          points: 0,\r\n        }\r\n      ],\r\n      gp: \"\"\r\n    }\r\n  }\r\n  addField(){\r\n    console.log(\"hdhdh\")\r\n    this.setState(prevState => ({ \r\n    \tcourses: [...prevState.courses, {\r\n        name: \"\",\r\n        units: 0,\r\n        scores: 0,\r\n        points: 0,\r\n      }\r\n    ]\r\n    }))\r\n  }\r\n  pointsCal(i){\r\n    let courses = [...this.state.courses];\r\n    if(courses[i].scores !== 0){\r\n      if(courses[i].scores >= 75){\r\n        courses[i].points = 4.0;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 70 && courses[i].scores < 75){\r\n        courses[i].points = 3.5;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 65 && courses[i].scores < 70){\r\n        courses[i].points = 3.25;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 60 && courses[i].scores < 65){\r\n        courses[i].points = 3.0;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 55 && courses[i].scores < 60){\r\n        courses[i].points = 2.75;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 50 && courses[i].scores < 55){\r\n        courses[i].points = 2.5;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 45 && courses[i].scores < 50){\r\n        courses[i].points = 2.25;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores >= 40 && courses[i].scores < 45){\r\n        courses[i].points = 2.0;\r\n        this.setState({courses})\r\n      }\r\n      if(courses[i].scores < 40){\r\n        courses[i].points = 0;\r\n        this.setState({courses})\r\n      }\r\n    }\r\n  }\r\n\r\n  createUI(){\r\n    return this.state.courses.map((el, i) => (\r\n      <tr key={i} className=\"info\">\r\n        <td>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            required\r\n            value={el.name} \r\n            onChange={this.handleChange.bind(this, i)}/>          \r\n        </td>\r\n        <td>\r\n          <input \r\n            type=\"number\" \r\n            name=\"units\"\r\n            max=\"6\"\r\n            min=\"1\"\r\n            value={el.units}\r\n            required\r\n            onChange={this.handleChange.bind(this, i)}/>\r\n        </td>\r\n        <td>\r\n          <input \r\n            type=\"number\" \r\n            max=\"100\"\r\n            min=\"0\"\r\n            name=\"scores\" \r\n            value={el.scores}\r\n            required\r\n            onChange={this.handleChange.bind(this, i)}/>\r\n        </td>\r\n        <td>\r\n          <input \r\n            type=\"number\" \r\n            name=\"points\" \r\n            value={el.points} />\r\n        </td>\r\n        <td>\r\n          <button type=\"button\" className=\"btn1\" onClick={this.removeField.bind(this, i)}>\r\n            <i class=\"fas fa-trash-alt\"></i>\r\n          </button>        \r\n        </td>\r\n      </tr>        \r\n    ))\r\n  }\r\n  removeField(i){\r\n    let courses = [...this.state.courses];\r\n    courses.splice(i, 1);\r\n    this.setState({ courses });\r\n  }\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    console.log(this.state.courses);\r\n    let totalPoints = this.state.courses.reduce( (prev, curr) => {\r\n      return prev + (Number(curr.units) * Number(curr.points)); \r\n    }, 0);\r\n    let units = this.state.courses.reduce( (prev, curr) => {\r\n      return prev + Number(curr.units); \r\n    }, 0);\r\n    let result = (totalPoints / units);\r\n\r\n    this.setState({\r\n      gp: result\r\n    })\r\n  }\r\n  handleChange(i, e) {\r\n    const { name, value } = e.target;\r\n    let courses = [...this.state.courses];\r\n    courses[i] = {...courses[i], [name]: value};\r\n    this.setState({ courses }, this.pointsCal.bind(this, i));\r\n    \r\n }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-block\">\r\n        <div className=\"left-part\">\r\n          <i className=\"fas fa-graduation-cap\"></i>\r\n          <h1>Fill the form and Click Submit</h1>\r\n          <p>Your GPA will appear here!</p>\r\n          <h1>{Math.round(this.state.gp * 100) / 100}</h1>\r\n          <div >\r\n            \r\n          </div>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <div className=\"title\">\r\n            <i className=\"fas fa-pencil-alt\"></i> \r\n            <h2>Calculate your GPA</h2>\r\n          </div>\r\n          <table>\r\n          <tr>\r\n            <th>Course Code</th>\r\n            <th>Course Unit</th>\r\n            <th>Score</th>\r\n            <th>Points</th>\r\n            <th></th>\r\n          </tr>\r\n          {this.createUI()}\r\n        </table>\r\n          <button className=\"btn10\" onClick={this.addField.bind(this)}>\r\n            <i class=\"fas fa-plus\"></i>\r\n          </button>\r\n          <button type=\"submit\" href=\"/\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}